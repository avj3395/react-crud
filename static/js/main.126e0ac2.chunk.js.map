{"version":3,"sources":["components/Add.js","App.js","reportWebVitals.js","index.js"],"names":["Add","useState","datas","setDatas","name","setName","email","setEmail","message","setMessage","setUpdate","class","className","autoComplete","onSubmit","e","preventDefault","window","alert","id","length","names","emails","messages","type","placeholder","value","onChange","target","map","data","variant","onClick","keys","allitems","filter","index","console","log","updateData","alt","src","alldata","splice","deleteData","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAIe,SAASA,IAAO,IAAD,EACFC,mBAAS,IADP,mBACrBC,EADqB,KACdC,EADc,OAEJF,mBAAS,IAFL,mBAErBG,EAFqB,KAEfC,EAFe,OAGFJ,mBAAS,IAHP,mBAGrBK,EAHqB,KAGdC,EAHc,OAIEN,mBAAS,IAJX,mBAIrBO,EAJqB,KAIZC,EAJY,OAKAR,mBAAS,SALT,mBAKbS,GALa,WA2D5B,OACE,8BACE,sBAAKC,MAAM,aAAX,UACE,qBAAKA,MAAM,OAAX,SACE,uBAAMC,UAAU,gBAAgBC,aAAa,MAAMC,SAtD3C,SAACC,GACfA,EAAEC,iBAEW,KAATZ,GAAyB,KAAVE,GAA4B,KAAZE,EACjCS,OAAOC,MAAM,yBAEbf,EAAS,GAAD,mBACHD,GADG,CAEN,CACEiB,GAAIjB,EAAMkB,OACVC,MAAOjB,EACPkB,OAAQhB,EACRiB,SAAUf,MAKhBH,EAAQ,IACRE,EAAS,IACTE,EAAW,KAmCL,UACE,uBACEe,KAAK,OACLC,YAAY,OACZC,MAAOtB,EACPuB,SArCO,SAACZ,GAClBV,EAAQU,EAAEa,OAAOF,UAsCT,uBACEF,KAAK,OACLC,YAAY,gBACZC,MAAOpB,EACPqB,SAxCQ,SAACZ,GACnBR,EAASQ,EAAEa,OAAOF,UAyCV,0BACEF,KAAK,OACLC,YAAY,UACZC,MAAOlB,EACPmB,SA3CU,SAACZ,GACrBN,EAAWM,EAAEa,OAAOF,UA4CZ,wBAAQF,KAAK,SAAb,sBAIJ,8BACE,wBAAOZ,UAAU,aAAjB,UACE,gCACE,+BACE,oBAAIA,UAAU,YAAd,kBACA,oBAAIA,UAAU,YAAd,mBACA,oBAAIA,UAAU,YAAd,qBACA,oBAAIA,UAAU,YAAd,yBAIJ,uBAAOA,UAAU,cAAjB,SACGV,EAAM2B,KAAI,SAACC,GAAD,OACT,+BACE,qBAAIlB,UAAU,YAAd,UAA2BkB,EAAKT,MAAhC,OACA,qBAAIT,UAAU,YAAd,UAA2BkB,EAAKR,OAAhC,OACA,oBAAIV,UAAU,YAAd,SAA2BkB,EAAKP,WAChC,qBAAIX,UAAU,YAAd,UACE,wBACEA,UAAU,8BACVmB,QAAQ,kBACRC,QAAS,kBAxDV,SAACC,GAClBvB,EAAU,QACV,IAAMwB,EAAWhC,EAAMiC,QAAO,SAACL,EAAMM,GAAP,OAAiBA,IAAUH,KACzDI,QAAQC,IAAIJ,GAqDqBK,CAAWT,EAAKX,KAHjC,SAKE,qBACEqB,IAAI,GACJC,IAAI,sDAGR,wBACEjB,KAAK,SACLZ,UAAU,0BACVoB,QAAS,kBA5EV,SAACC,GAClB,IAAMS,EAAUxC,EAChBwC,EAAQC,OAAOV,EAAM,GAErB9B,EAAS,YAAIuC,IAEbL,QAAQC,IAAIpC,GAsEqB0C,CAAWd,EAAKX,KAHjC,SAKE,qBACEqB,IAAI,GACJC,IAAI,0EAtBHX,EAAKX,mBC3Ff0B,MARf,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWhD,OCKxBiD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.126e0ac2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"./add.css\";\r\n\r\nexport default function Add() {\r\n  const [datas, setDatas] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [update, setUpdate] = useState(\"false\");\r\n  \r\n  \r\n\r\n  const adddata = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (name === \"\" && email === \"\" && message === \"\") {\r\n      window.alert(\"fields are empty!!!! \");\r\n    } else {\r\n      setDatas([\r\n        ...datas,\r\n        {\r\n          id: datas.length,\r\n          names: name,\r\n          emails: email,\r\n          messages: message,\r\n        },\r\n      ]);\r\n    }\r\n\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setMessage(\"\");\r\n  };\r\n\r\n  const nameChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n  const emailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n  const messageChange = (e) => {\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  const deleteData = (keys) => {\r\n    const alldata = datas;\r\n    alldata.splice(keys, 1);\r\n\r\n    setDatas([...alldata]);\r\n\r\n    console.log(datas);\r\n    \r\n  };\r\n\r\n  const updateData = (keys) => {\r\n    setUpdate(\"true\");\r\n    const allitems = datas.filter((data, index) => index === keys);\r\n    console.log(allitems);\r\n    \r\n    \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"login-page\">\r\n        <div class=\"form\">\r\n          <form className=\"register-form\" autoComplete=\"off\" onSubmit={adddata}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"name\"\r\n              value={name}\r\n              onChange={nameChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"email address\"\r\n              value={email}\r\n              onChange={emailChange}\r\n            />\r\n            <textarea\r\n              type=\"text\"\r\n              placeholder=\"message\"\r\n              value={message}\r\n              onChange={messageChange}\r\n            />\r\n            <button type=\"submit\">ADD</button>\r\n          </form>\r\n        </div>\r\n\r\n        <div>\r\n          <table className=\"table-fill\">\r\n            <thead>\r\n              <tr>\r\n                <th className=\"text-left\">Name</th>\r\n                <th className=\"text-left\">Email</th>\r\n                <th className=\"text-left\">Message</th>\r\n                <th className=\"text-left\">Action</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody className=\"table-hover\">\r\n              {datas.map((data) => (\r\n                <tr key={data.id}>\r\n                  <td className=\"text-left\">{data.names} </td>\r\n                  <td className=\"text-left\">{data.emails} </td>\r\n                  <td className=\"text-left\">{data.messages}</td>\r\n                  <td className=\"text-left\">\r\n                    <button\r\n                      className=\"btn btn-outline-primary m-2\"\r\n                      variant=\"outline-primary\"\r\n                      onClick={() => updateData(data.id)}\r\n                    >\r\n                      <img\r\n                        alt=\"\"\r\n                        src=\"https://img.icons8.com/wired/20/000000/edit.png\"\r\n                      />\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-outline-danger \"\r\n                      onClick={() => deleteData(data.id)}\r\n                    >\r\n                      <img\r\n                        alt=\"\"\r\n                        src=\"https://img.icons8.com/ios-filled/20/000000/delete-forever.png\"\r\n                      />\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport {HashRouter as Router, Route} from \"react-router-dom\";\nimport Add from './components/Add';\n\nfunction App() {\n  return (\n    <Router>\n      <Route path=\"/\" exact component={Add} />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}