{"version":3,"sources":["components/Add.js","App.js","reportWebVitals.js","index.js"],"names":["Add","useState","datas","setDatas","name","setName","email","setEmail","message","setMessage","update","setUpdate","editkey","setEditKey","insertdata","id","length","names","emails","messages","className","autoComplete","onSubmit","e","preventDefault","window","alert","type","placeholder","value","onChange","target","onClick","map","d","data","variant","keys","keyid","parseInt","console","log","updateData","alt","src","alldata","splice","deleteData","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.483f9447.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"./add.css\";\r\n\r\nexport default function Add() {\r\n  const [datas, setDatas] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [update, setUpdate] = useState(\"false\");\r\n  const [emailstatus, setEmailStatus] = useState(\"false\");\r\n  const [editkey, setEditKey] = useState(\"\");\r\n\r\n  const adddata = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (name === \"\" && email === \"\" && message === \"\") {\r\n      window.alert(\"fields are empty!!!! \");\r\n    }  else {\r\n      insertdata();\r\n      \r\n    }\r\n  };\r\n\r\n  const insertdata = () => {\r\n    setDatas([\r\n      ...datas,\r\n      {\r\n        id: datas.length,\r\n        names: name,\r\n        emails: email,\r\n        messages: message,\r\n      },\r\n    ]);\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setMessage(\"\");\r\n  };\r\n\r\n  const nameChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n  const emailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n  const messageChange = (e) => {\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  const deleteData = (keys) => {\r\n    const alldata = datas;\r\n    alldata.splice(keys, 1);\r\n\r\n    setDatas([...alldata]);\r\n\r\n    console.log(datas);\r\n  };\r\n\r\n  const updateData = (keys) => {\r\n    setUpdate(\"true\");\r\n    const keyid = parseInt(keys.id);\r\n    console.log(keys);\r\n    setName(keys.names);\r\n    setEmail(keys.emails);\r\n    setMessage(keys.messages);\r\n    setEditKey(keyid);\r\n  };\r\n\r\n  const Edititems = () => {\r\n    datas.map((d) => {\r\n      if (d.id === editkey) {\r\n        d.names = name;\r\n        d.emails = email;\r\n        d.messages = message;\r\n      }\r\n    });\r\n    setDatas([...datas]);\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setMessage(\"\");\r\n    setUpdate(\"false\");\r\n  };\r\n\r\n  const Editcancel = () => {\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setMessage(\"\");\r\n    setUpdate(\"false\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"login-page\">\r\n        <div className=\"form\">\r\n          <form className=\"register-form\" autoComplete=\"off\" onSubmit={adddata}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"name\"\r\n              value={name}\r\n              onChange={nameChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"email address\"\r\n              value={email}\r\n              onChange={emailChange}\r\n            />\r\n            <textarea\r\n              type=\"text\"\r\n              placeholder=\"message\"\r\n              value={message}\r\n              onChange={messageChange}\r\n            />\r\n            {update === \"true\" ? (\r\n              <div>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => Edititems()}\r\n                >\r\n                  Update\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-danger\"\r\n                  onClick={() => Editcancel()}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <button type=\"submit\" className=\"addbtn\">\r\n                ADD\r\n              </button>\r\n            )}\r\n          </form>\r\n        </div>\r\n\r\n        <div>\r\n          <table className=\"table-fill\">\r\n            {datas.length >= 1 ? (\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"text-left\">Name</th>\r\n                  <th className=\"text-left\">Email</th>\r\n                  <th className=\"text-left\">Message</th>\r\n                  <th className=\"text-left\">Action</th>\r\n                </tr>\r\n              </thead>\r\n            ) : null}\r\n\r\n            <tbody className=\"table-hover\">\r\n              {datas.map((data) => (\r\n                <tr key={data.id}>\r\n                  <td className=\"text-left\">{data.names} </td>\r\n                  <td className=\"text-left\">{data.emails} </td>\r\n                  <td className=\"text-left\">{data.messages}</td>\r\n                  <td className=\"text-left\">\r\n                    <button\r\n                      className=\"btn btn-outline-primary m-2\"\r\n                      variant=\"outline-primary\"\r\n                      onClick={() => updateData(data)}\r\n                    >\r\n                      <img\r\n                        alt=\"\"\r\n                        src=\"https://img.icons8.com/wired/20/000000/edit.png\"\r\n                      />\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-outline-danger \"\r\n                      onClick={() => deleteData(data.id)}\r\n                    >\r\n                      <img\r\n                        alt=\"\"\r\n                        src=\"https://img.icons8.com/ios-filled/20/000000/delete-forever.png\"\r\n                      />\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\n\nimport Add from \"./components/Add\";\n\nfunction App() {\n  return <Add />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}