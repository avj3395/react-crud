{"version":3,"sources":["components/TextError.js","components/Crud.js","App.js","reportWebVitals.js","index.js"],"names":["TextError","props","className","children","Column","Table","Crud","useState","flag","setFlag","datas","setDatas","name","email","message","formvalue","setFormValue","initialValues","savedValues","id","validationSchema","yup","required","onSubmit","values","resetForm","map","item","length","enableReinitialize","type","component","as","onClick","dataSource","title","dataIndex","render","text","record","size","keys","alldata","splice","deleteData","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d35aa3d6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nfunction TextError(props) {\r\n    return (\r\n        <div className=\"error\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default TextError\r\n\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Table, Space } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport \"./crud.css\";\r\nimport TextError from \"./TextError\";\r\nconst { Column } = Table;\r\n\r\nfunction Crud() {\r\n  const [flag, setFlag] = useState(\"false\");\r\n  const [datas, setDatas] = useState([]);\r\n  const [formvalue, setFormValue] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    message: \"\",\r\n  });\r\n  const initialValues = {\r\n    name: \"\",\r\n    email: \"\",\r\n    message: \"\",\r\n  };\r\n  const savedValues = {\r\n    id: formvalue.id,\r\n    name: formvalue.name,\r\n    email: formvalue.email,\r\n    message: formvalue.message,\r\n  };\r\n\r\n  const onSubmit = (values, { resetForm }) => {\r\n    if (flag === \"true\") {\r\n      datas.map((item) => {\r\n        if (item.id === values.id) {\r\n          item.name = values.name;\r\n          item.email = values.email;\r\n          item.message = values.message;\r\n        }\r\n      });\r\n    } else {\r\n      setDatas([\r\n        ...datas,\r\n        {\r\n          id: datas.length,\r\n          name: values.name,\r\n          email: values.email,\r\n          message: values.message,\r\n        },\r\n      ]);\r\n    }\r\n    resetForm({ values: \"\" });\r\n\r\n    setFormValue(initialValues);\r\n    setFlag(\"false\");\r\n  };\r\n\r\n  const validationSchema = yup.object({\r\n    name: yup.string().required(\"Required !\"),\r\n    email: yup.string().email(\"Invalid email format !\").required(\"Required !\"),\r\n    message: yup.string().required(\"Required !\"),\r\n  });\r\n\r\n  const deleteData = (keys) => {\r\n    const alldata = datas;\r\n    alldata.splice(keys, 1);\r\n\r\n    setDatas([...alldata]);\r\n\r\n    //console.log(datas);\r\n  };\r\n\r\n  const updateData = (data) => {\r\n    //console.log(data);\r\n    setFormValue(data);\r\n    setFlag(\"true\");\r\n    //console.log(formvalue);\r\n  };\r\n\r\n  const cancelEdit = () => {\r\n    setFormValue(initialValues);\r\n    setFlag(\"false\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row p-3\">\r\n        <div className=\"col-md-4\">\r\n          <Formik\r\n            initialValues={savedValues || initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={onSubmit}\r\n            enableReinitialize\r\n          >\r\n            <Form>\r\n              <div className=\"form-group\">\r\n                <label>Name</label>\r\n                <Field\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                />\r\n                <ErrorMessage name=\"name\" component={TextError} />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Email</label>\r\n                <Field\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                />\r\n                <ErrorMessage name=\"email\" component={TextError} />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Message</label>\r\n                <Field\r\n                  as=\"textarea\"\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  id=\"message\"\r\n                  name=\"message\"\r\n                />\r\n                <ErrorMessage name=\"message\" component={TextError} />\r\n              </div>\r\n\r\n              {flag === \"true\" ? (\r\n                <div>\r\n                  <button className=\"btn btn-primary mr-2\" type=\"submit\">\r\n                    Update\r\n                  </button>\r\n\r\n                  <button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={() => cancelEdit()}\r\n                    type=\"button\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <button className=\"btn btn-success\" type=\"submit\">\r\n                  ADD\r\n                </button>\r\n              )}\r\n            </Form>\r\n          </Formik>\r\n        </div>\r\n        <div className=\"col-md-8\">\r\n          <Table dataSource={datas}>\r\n            <Column title=\"Name\" dataIndex=\"name\" />\r\n            <Column title=\"Email\" dataIndex=\"email\" />\r\n            <Column title=\"Message\" dataIndex=\"message\" />\r\n\r\n            <Column\r\n              title=\"Action\"\r\n              render={(text, record) => (\r\n                <Space size=\"middle\">\r\n                  <button\r\n                    className=\"btn btn-info\"\r\n                    type=\"button\"\r\n                    onClick={() => updateData(record)}\r\n                  >\r\n                    Edit{\" \"}\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-danger\"\r\n                    type=\"button\"\r\n                    onClick={() => deleteData(record.id)}\r\n                    key={record.id}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </Space>\r\n              )}\r\n            />\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Crud;\r\n","import React from \"react\";\n\n//import Add from \"./components/Add\";\nimport Crud from \"./components/Crud\";\n\nfunction App() {\n  return <Crud />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}